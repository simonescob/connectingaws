{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.gifPaginator = void 0;\n/**\n * @hidden\n */\n\nvar gifPaginator = function (fetchGifs, initialGifs) {\n  if (initialGifs === void 0) {\n    initialGifs = [];\n  }\n\n  var gifs = __spreadArray([], initialGifs); // for deduping\n\n\n  var gifIds = initialGifs.map(function (g) {\n    return g.id;\n  });\n  var offset = initialGifs.length;\n  var isDoneFetching = false;\n  return function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var result, pagination, newGifs;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (isDoneFetching) {\n              return [2\n              /*return*/\n              , gifs];\n            }\n\n            return [4\n            /*yield*/\n            , fetchGifs(offset)];\n\n          case 1:\n            result = _a.sent();\n            pagination = result.pagination, newGifs = result.data;\n            offset = pagination.count + pagination.offset;\n            isDoneFetching = offset === pagination.total_count;\n            newGifs.forEach(function (gif) {\n              var id = gif.id;\n\n              if (!gifIds.includes(id)) {\n                // add gifs and gifIds\n                gifs.push(gif);\n                gifIds.push(id);\n              }\n            });\n            return [2\n            /*return*/\n            , __spreadArray([], gifs)];\n        }\n      });\n    });\n  };\n};\n\nexports.gifPaginator = gifPaginator;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;;;AAGO,IAAMA,YAAY,GAAG,UAACC,SAAD,EAAqDC,WAArD,EAA6E;AAAxB;AAAAA;AAAwB;;AACrG,MAAMC,IAAI,qBAAeD,WAAf,CAAV,CADqG,CAErG;;;AACA,MAAME,MAAM,GAAwBF,WAAW,CAACG,GAAZ,CAAgB,aAAC;AAAI,YAAC,CAACC,EAAF;AAAI,GAAzB,CAApC;AACA,MAAIC,MAAM,GAAGL,WAAW,CAACM,MAAzB;AACA,MAAIC,cAAc,GAAG,KAArB;AACA,SAAO;AAAA;;;;;AACH,gBAAIA,cAAJ,EAAoB;AAChB;AAAA;AAAA,gBAAON,IAAP;AACH;;AACc;AAAA;AAAA,cAAMF,SAAS,CAACM,MAAD,CAAf;;;AAATG,kBAAM,GAAGC,SAAT;AACEC,sBAAU,GAAoBF,MAAM,WAApC,EAAkBG,OAAO,GAAKH,MAAM,KAApC;AACRH,kBAAM,GAAGK,UAAU,CAACE,KAAX,GAAmBF,UAAU,CAACL,MAAvC;AACAE,0BAAc,GAAGF,MAAM,KAAKK,UAAU,CAACG,WAAvC;AACAF,mBAAO,CAACG,OAAR,CAAgB,eAAG;AACP,oBAAE,GAAKC,GAAG,GAAV;;AACR,kBAAI,CAACb,MAAM,CAACc,QAAP,CAAgBZ,EAAhB,CAAL,EAA0B;AACtB;AACAH,oBAAI,CAACgB,IAAL,CAAUF,GAAV;AACAb,sBAAM,CAACe,IAAP,CAAYb,EAAZ;AACH;AACJ,aAPD;AAQA;AAAA;AAAA,gCAAWH,IAAX;;;KAhBG;AAiBN,GAjBD;AAkBH,CAxBM;;AAAMiB,uBAAYpB,YAAZ","names":["gifPaginator","fetchGifs","initialGifs","gifs","gifIds","map","id","offset","length","isDoneFetching","result","_a","pagination","newGifs","count","total_count","forEach","gif","includes","push","exports"],"sources":["/home/simo/programming/web/projects/search-gifs/node_modules/@giphy/js-fetch-api/src/paginator.ts"],"sourcesContent":["import { IGif } from '@giphy/js-types'\nimport { GifsResult } from './result-types'\n\n/**\n * @hidden\n */\nexport const gifPaginator = (fetchGifs: (offset: number) => Promise<GifsResult>, initialGifs: IGif[] = []) => {\n    const gifs: IGif[] = [...initialGifs]\n    // for deduping\n    const gifIds: (string | number)[] = initialGifs.map(g => g.id)\n    let offset = initialGifs.length\n    let isDoneFetching = false\n    return async () => {\n        if (isDoneFetching) {\n            return gifs\n        }\n        const result = await fetchGifs(offset)\n        const { pagination, data: newGifs } = result\n        offset = pagination.count + pagination.offset\n        isDoneFetching = offset === pagination.total_count\n        newGifs.forEach(gif => {\n            const { id } = gif\n            if (!gifIds.includes(id)) {\n                // add gifs and gifIds\n                gifs.push(gif)\n                gifIds.push(id)\n            }\n        })\n        return [...gifs]\n    }\n}\n"]},"metadata":{},"sourceType":"script"}