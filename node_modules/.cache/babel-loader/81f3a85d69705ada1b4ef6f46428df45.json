{"ast":null,"code":"var _jsxFileName = \"/home/simo/programming/web/projects/search-gifs/src/components/SearchGif.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Grid } from '@giphy/react-components';\nimport { GiphyFetch } from '@giphy/js-fetch-api';\nimport '../assets/css/SearchGif.css'; // variable that get giphy code\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst gf = new GiphyFetch('0U6DW1ZMVMxiwu9Rk5tqnm4SgbfnpGmT'); // function component SearchGif\n\nconst SearchGif = () => {\n  _s();\n\n  // search state \n  const [search, setSearch] = useState(\"\"); // widthGifs state has a default value for \n  // width of the grid\n\n  const [widthGifs, setWidthGifs] = useState(800); // columnsGifs state has a default value for \n  // columns of the grid\n\n  const [columnsGifs, setColumnsGifs] = useState(3); // get the width of screen\n\n  const widthScreen = window.screen.width; // function get value of input search \n\n  const handleChange = e => {\n    let val = e.target.value; // if there is more than 3 lyrics do search\n\n    if (val.length >= 3) {\n      setSearch(val);\n    } else {\n      setSearch(\"\");\n    }\n  };\n\n  useEffect(() => {\n    // if width is less than 800, \n    // show 2 columns and an width of 600px  \n    if (widthScreen < 800) {\n      setWidthGifs(600);\n      setColumnsGifs(2);\n    } // if width is less than or equal to 600, \n    // show 1 columns and an width of 400px  \n\n\n    if (widthScreen <= 600) {\n      setWidthGifs(400);\n      setColumnsGifs(1);\n    }\n  }, [widthScreen]);\n\n  const fetchGifs = offset => gf.search(search, {\n    offset,\n    limit: 5\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search GIFS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"search-input\",\n      onChange: e => handleChange(e),\n      placeholder: \"Buscar un GIF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        width: widthGifs,\n        columns: columnsGifs,\n        fetchGifs: fetchGifs\n      }, search, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SearchGif, \"llhlyBi13NPskE4ynM74jfCoud0=\");\n\n_c = SearchGif;\nexport default SearchGif;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchGif\");","map":{"version":3,"sources":["/home/simo/programming/web/projects/search-gifs/src/components/SearchGif.tsx"],"names":["React","useEffect","useState","Grid","GiphyFetch","gf","SearchGif","search","setSearch","widthGifs","setWidthGifs","columnsGifs","setColumnsGifs","widthScreen","window","screen","width","handleChange","e","val","target","value","length","fetchGifs","offset","limit"],"mappings":";;;AAAA,OAAOA,KAAP,IAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAO,6BAAP,C,CAEA;;;;AACA,MAAMC,EAAE,GAAG,IAAID,UAAJ,CAAe,kCAAf,CAAX,C,CAEA;;AACA,MAAME,SAAS,GAAG,MAAM;AAAA;;AAEtB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC,CAHsB,CAKtB;AACA;;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,GAAD,CAA1C,CAPsB,CAStB;AACA;;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,CAAD,CAA9C,CAXsB,CAatB;;AACA,QAAMW,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAcC,KAAlC,CAdsB,CAgBtB;;AACA,QAAMC,YAAY,GAAIC,CAAD,IAAsC;AACzD,QAAIC,GAAG,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAnB,CADyD,CAGzD;;AACA,QAAGF,GAAG,CAACG,MAAJ,IAAc,CAAjB,EAAmB;AACjBd,MAAAA,SAAS,CAACW,GAAD,CAAT;AACD,KAFD,MAEK;AACHX,MAAAA,SAAS,CAAC,EAAD,CAAT;AACD;AACF,GATD;;AAWAP,EAAAA,SAAS,CAAC,MAAM;AAEd;AACA;AACA,QAAGY,WAAW,GAAG,GAAjB,EAAqB;AACnBH,MAAAA,YAAY,CAAC,GAAD,CAAZ;AACAE,MAAAA,cAAc,CAAC,CAAD,CAAd;AACD,KAPa,CASd;AACA;;;AACA,QAAGC,WAAW,IAAI,GAAlB,EAAsB;AACpBH,MAAAA,YAAY,CAAC,GAAD,CAAZ;AACAE,MAAAA,cAAc,CAAC,CAAD,CAAd;AACD;AAEF,GAhBQ,EAgBN,CAACC,WAAD,CAhBM,CAAT;;AAkBA,QAAMU,SAAS,GAAIC,MAAD,IAAoBnB,EAAE,CAACE,MAAH,CAAUA,MAAV,EAAkB;AAAEiB,IAAAA,MAAF;AAAUC,IAAAA,KAAK,EAAE;AAAjB,GAAlB,CAAtC;;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAA4C,MAAA,QAAQ,EAAEP,CAAC,IAAID,YAAY,CAACC,CAAD,CAAvE;AAA4E,MAAA,WAAW,EAAC;AAAxF;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAET,SAAb;AAAwB,QAAA,OAAO,EAAEE,WAAjC;AAA8C,QAAA,SAAS,EAAEY;AAAzD,SAAyEhB,MAAzE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAWD,CA3DD;;GAAMD,S;;KAAAA,S;AA6DN,eAAeA,SAAf","sourcesContent":["import React, { ChangeEvent, useEffect, useState } from 'react';\nimport { Grid } from '@giphy/react-components';\nimport { GiphyFetch } from '@giphy/js-fetch-api';\nimport '../assets/css/SearchGif.css';\n\n// variable that get giphy code\nconst gf = new GiphyFetch('0U6DW1ZMVMxiwu9Rk5tqnm4SgbfnpGmT');\n\n// function component SearchGif\nconst SearchGif = () => {\n\n  // search state \n  const [search, setSearch] = useState(\"\");\n\n  // widthGifs state has a default value for \n  // width of the grid\n  const [widthGifs, setWidthGifs] = useState(800);\n  \n  // columnsGifs state has a default value for \n  // columns of the grid\n  const [columnsGifs, setColumnsGifs] = useState(3);\n\n  // get the width of screen\n  const widthScreen = window.screen.width;\n\n  // function get value of input search \n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    let val = e.target.value;\n\n    // if there is more than 3 lyrics do search\n    if(val.length >= 3){\n      setSearch(val);\n    }else{\n      setSearch(\"\");\n    }\n  }\n\n  useEffect(() => {\n    \n    // if width is less than 800, \n    // show 2 columns and an width of 600px  \n    if(widthScreen < 800){\n      setWidthGifs(600);\n      setColumnsGifs(2);\n    }\n    \n    // if width is less than or equal to 600, \n    // show 1 columns and an width of 400px  \n    if(widthScreen <= 600){\n      setWidthGifs(400);\n      setColumnsGifs(1);\n    }\n\n  }, [widthScreen])\n\n  const fetchGifs = (offset: number) => gf.search(search, { offset, limit: 5 });\n\n  return (\n    <>\n      <h2>Search GIFS</h2>\n\n      <input type=\"text\" className=\"search-input\" onChange={e => handleChange(e)} placeholder=\"Buscar un GIF\" />\n\n      <div className=\"search-box\">\n        <Grid width={widthGifs} columns={columnsGifs} fetchGifs={fetchGifs} key={search} />\n      </div>\n    </>\n  );\n}\n\nexport default SearchGif;"]},"metadata":{},"sourceType":"module"}