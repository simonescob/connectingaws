{"ast":null,"code":"\"use strict\";\n\nvar __makeTemplateObject = this && this.__makeTemplateObject || function (cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n\n  return cooked;\n};\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar styled_1 = __importDefault(require(\"@emotion/styled\"));\n\nvar js_fetch_api_1 = require(\"@giphy/js-fetch-api\");\n\nvar js_util_1 = require(\"@giphy/js-util\");\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar throttle_debounce_1 = require(\"throttle-debounce\");\n\nvar observer_1 = __importDefault(require(\"../util/observer\"));\n\nvar fetch_error_1 = __importDefault(require(\"./fetch-error\"));\n\nvar gif_1 = __importDefault(require(\"./gif\"));\n\nvar loader_1 = __importDefault(require(\"./loader\"));\n\nvar masonry_grid_1 = __importDefault(require(\"./masonry-grid\"));\n\nvar pingback_context_manager_1 = __importDefault(require(\"./pingback-context-manager\"));\n\nvar Loader = styled_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n    opacity: \", \";\\n\"], [\"\\n    opacity: \", \";\\n\"])), function (props) {\n  return props.isFirstLoad ? 0 : 1;\n});\nvar defaultProps = Object.freeze({\n  gutter: 6,\n  user: {},\n  initialGifs: []\n});\nvar initialState = Object.freeze({\n  isFetching: false,\n  isError: false,\n  gifWidth: 0,\n  gifs: [],\n  isLoaderVisible: false,\n  isDoneFetching: false\n});\n\nvar Grid =\n/** @class */\nfunction (_super) {\n  __extends(Grid, _super);\n\n  function Grid() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = __assign(__assign({}, initialState), {\n      gifs: _this.props.initialGifs || []\n    });\n    _this.unmounted = false;\n    _this.paginator = js_fetch_api_1.gifPaginator(_this.props.fetchGifs, _this.state.gifs);\n\n    _this.onLoaderVisible = function (isVisible) {\n      if (_this.unmounted) return;\n\n      _this.setState({\n        isLoaderVisible: isVisible\n      }, _this.onFetch);\n    };\n\n    _this.onFetch = throttle_debounce_1.debounce(Grid.fetchDebounce, function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, isFetching, isLoaderVisible, gifs, prefetchCount, gifs_1, error_1, onGifsFetchError, onGifsFetched;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              if (this.unmounted) return [2\n              /*return*/\n              ];\n              _a = this.state, isFetching = _a.isFetching, isLoaderVisible = _a.isLoaderVisible, gifs = _a.gifs;\n              prefetchCount = gifs.length;\n              if (!(!isFetching && isLoaderVisible)) return [3\n              /*break*/\n              , 5];\n              this.setState({\n                isFetching: true,\n                isError: false\n              });\n              _b.label = 1;\n\n            case 1:\n              _b.trys.push([1, 3,, 4]);\n\n              return [4\n              /*yield*/\n              , this.paginator()];\n\n            case 2:\n              gifs_1 = _b.sent();\n              return [3\n              /*break*/\n              , 4];\n\n            case 3:\n              error_1 = _b.sent();\n              this.setState({\n                isFetching: false,\n                isError: true\n              });\n              onGifsFetchError = this.props.onGifsFetchError;\n              if (onGifsFetchError) onGifsFetchError(error_1);\n              return [3\n              /*break*/\n              , 4];\n\n            case 4:\n              if (gifs_1) {\n                // if we've just fetched and we don't have\n                // any more gifs, we're done fetching\n                if (prefetchCount === gifs_1.length) {\n                  this.setState({\n                    isDoneFetching: true\n                  });\n                } else {\n                  this.setState({\n                    gifs: gifs_1,\n                    isFetching: false\n                  });\n                  onGifsFetched = this.props.onGifsFetched;\n                  if (onGifsFetched) onGifsFetched(gifs_1);\n                  this.onFetch();\n                }\n              }\n\n              _b.label = 5;\n\n            case 5:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    });\n    return _this;\n  }\n\n  Grid.prototype.componentDidMount = function () {\n    this.onFetch();\n  };\n\n  Grid.prototype.componentWillUnmount = function () {\n    this.unmounted = true;\n  };\n\n  Grid.prototype.render = function () {\n    var _a = this.props,\n        onGifVisible = _a.onGifVisible,\n        onGifRightClick = _a.onGifRightClick,\n        _b = _a.className,\n        className = _b === void 0 ? Grid.className : _b,\n        onGifSeen = _a.onGifSeen,\n        onGifClick = _a.onGifClick,\n        user = _a.user,\n        overlay = _a.overlay,\n        hideAttribution = _a.hideAttribution,\n        noLink = _a.noLink,\n        borderRadius = _a.borderRadius,\n        noResultsMessage = _a.noResultsMessage,\n        columns = _a.columns,\n        width = _a.width,\n        gutter = _a.gutter,\n        useTransform = _a.useTransform,\n        columnOffsets = _a.columnOffsets,\n        backgroundColor = _a.backgroundColor,\n        loaderConfig = _a.loaderConfig,\n        _c = _a.tabIndex,\n        tabIndex = _c === void 0 ? 0 : _c,\n        _d = _a.layoutType,\n        layoutType = _d === void 0 ? 'GRID' : _d,\n        _e = _a.loader,\n        LoaderVisual = _e === void 0 ? loader_1.default : _e;\n    var _f = this.state,\n        gifWidth = _f.gifWidth,\n        gifs = _f.gifs,\n        isError = _f.isError,\n        isDoneFetching = _f.isDoneFetching;\n    var showLoader = !isDoneFetching;\n    var isFirstLoad = gifs.length === 0; // get the height of each grid item\n\n    var itemHeights = gifs.map(function (gif) {\n      return js_util_1.getGifHeight(gif, gifWidth);\n    });\n    return react_1.default.createElement(pingback_context_manager_1.default, {\n      attributes: {\n        layout_type: layoutType\n      }\n    }, react_1.default.createElement(\"div\", {\n      className: className,\n      style: {\n        width: width\n      }\n    }, react_1.default.createElement(masonry_grid_1.default, {\n      itemHeights: itemHeights,\n      useTransform: useTransform,\n      itemWidth: gifWidth,\n      columns: columns,\n      gutter: gutter,\n      columnOffsets: columnOffsets\n    }, gifs.map(function (gif) {\n      return react_1.default.createElement(gif_1.default, {\n        gif: gif,\n        tabIndex: tabIndex,\n        key: gif.id,\n        width: gifWidth,\n        onGifClick: onGifClick,\n        onGifSeen: onGifSeen,\n        onGifVisible: onGifVisible,\n        onGifRightClick: onGifRightClick,\n        user: user,\n        overlay: overlay,\n        backgroundColor: backgroundColor,\n        hideAttribution: hideAttribution,\n        noLink: noLink,\n        borderRadius: borderRadius\n      });\n    })), !showLoader && gifs.length === 0 && noResultsMessage, isError ? react_1.default.createElement(fetch_error_1.default, {\n      onClick: this.onFetch\n    }) : showLoader && react_1.default.createElement(observer_1.default, {\n      onVisibleChange: this.onLoaderVisible,\n      config: loaderConfig\n    }, react_1.default.createElement(Loader, {\n      isFirstLoad: isFirstLoad\n    }, react_1.default.createElement(LoaderVisual, {\n      className: Grid.loaderClassName\n    })))));\n  };\n\n  Grid.className = 'giphy-grid';\n  Grid.loaderClassName = 'loader';\n  Grid.fetchDebounce = 250;\n  Grid.defaultProps = defaultProps;\n\n  Grid.getDerivedStateFromProps = function (_a, prevState) {\n    var columns = _a.columns,\n        gutter = _a.gutter,\n        width = _a.width;\n    var gutterOffset = gutter * (columns - 1);\n    var gifWidth = Math.floor((width - gutterOffset) / columns);\n\n    if (prevState.gifWidth !== gifWidth) {\n      return {\n        gifWidth: gifWidth\n      };\n    }\n\n    return null;\n  };\n\n  return Grid;\n}(react_1.PureComponent);\n\nexports.default = Grid;\nvar templateObject_1;","map":{"version":3,"mappings":"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","names":["Loader","styled_1","div","templateObject_1","props","isFirstLoad","defaultProps","Object","freeze","gutter","user","initialGifs","initialState","isFetching","isError","gifWidth","gifs","isLoaderVisible","isDoneFetching","__extends","_this","__assign","js_fetch_api_1","fetchGifs","state","isVisible","unmounted","setState","onFetch","throttle_debounce_1","Grid","fetchDebounce","_a","prefetchCount","length","paginator","gifs_1","_b","onGifsFetchError","error_1","onGifsFetched","onGifVisible","onGifRightClick","className","onGifSeen","onGifClick","overlay","hideAttribution","noLink","borderRadius","noResultsMessage","columns","width","useTransform","columnOffsets","backgroundColor","loaderConfig","_c","tabIndex","_d","layoutType","_e","LoaderVisual","loader_1","showLoader","itemHeights","map","gif","react_1","pingback_context_manager_1","attributes","layout_type","style","masonry_grid_1","itemWidth","gif_1","key","id","fetch_error_1","onClick","observer_1","onVisibleChange","onLoaderVisible","config","loaderClassName","prevState","gutterOffset","Math","floor","exports"],"sources":["/home/simo/programming/web/projects/search-gifs/node_modules/@giphy/react-components/src/components/grid.tsx"],"sourcesContent":["import styled from '@emotion/styled'\nimport { gifPaginator, GifsResult } from '@giphy/js-fetch-api'\nimport { IGif, IUser } from '@giphy/js-types'\nimport { getGifHeight } from '@giphy/js-util'\nimport React, { ElementType, GetDerivedStateFromProps, PureComponent } from 'react'\nimport { debounce } from 'throttle-debounce'\nimport Observer from '../util/observer'\nimport FetchError from './fetch-error'\nimport Gif, { EventProps } from './gif'\nimport DotsLoader from './loader'\nimport MasonryGrid from './masonry-grid'\nimport PingbackContextManager from './pingback-context-manager'\nimport type { GifOverlayProps } from './types'\n\ntype Props = {\n    className?: string\n    width: number\n    user: Partial<IUser>\n    columns: number\n    gutter: number\n    layoutType?: 'GRID' | 'MIXED'\n    fetchGifs: (offset: number) => Promise<GifsResult>\n    onGifsFetched?: (gifs: IGif[]) => void\n    onGifsFetchError?: (e: Error) => void\n    overlay?: ElementType<GifOverlayProps>\n    hideAttribution?: boolean\n    noLink?: boolean\n    noResultsMessage?: string | JSX.Element\n    initialGifs?: IGif[]\n    useTransform?: boolean\n    columnOffsets?: number[]\n    backgroundColor?: string\n    borderRadius?: number\n    tabIndex?: number\n    loaderConfig?: IntersectionObserverInit\n    loader?: ElementType\n} & EventProps\n\nconst Loader = styled.div<{ isFirstLoad: boolean }>`\n    opacity: ${(props) => (props.isFirstLoad ? 0 : 1)};\n`\n\nconst defaultProps = Object.freeze({ gutter: 6, user: {}, initialGifs: [] })\n\ntype State = {\n    gifWidth: number\n    isFetching: boolean\n    isError: boolean\n    gifs: IGif[]\n    isLoaderVisible: boolean\n    isDoneFetching: boolean\n}\n\nconst initialState = Object.freeze({\n    isFetching: false,\n    isError: false,\n    gifWidth: 0,\n    gifs: [] as IGif[],\n    isLoaderVisible: false,\n    isDoneFetching: false,\n})\n\nclass Grid extends PureComponent<Props, State> {\n    static className = 'giphy-grid'\n    static loaderClassName = 'loader'\n    static fetchDebounce = 250\n    static readonly defaultProps = defaultProps\n    readonly state = { ...initialState, gifs: this.props.initialGifs || [] }\n    bricks?: any\n    el?: HTMLDivElement | null\n    unmounted: boolean = false\n    paginator = gifPaginator(this.props.fetchGifs, this.state.gifs)\n    static getDerivedStateFromProps: GetDerivedStateFromProps<Props, State> = (\n        { columns, gutter, width }: Props,\n        prevState: State\n    ) => {\n        const gutterOffset = gutter * (columns - 1)\n        const gifWidth = Math.floor((width - gutterOffset) / columns)\n        if (prevState.gifWidth !== gifWidth) {\n            return { gifWidth }\n        }\n        return null\n    }\n\n    componentDidMount() {\n        this.onFetch()\n    }\n\n    componentWillUnmount() {\n        this.unmounted = true\n    }\n\n    onLoaderVisible = (isVisible: boolean) => {\n        if (this.unmounted) return\n        this.setState({ isLoaderVisible: isVisible }, this.onFetch)\n    }\n\n    onFetch = debounce(Grid.fetchDebounce, async () => {\n        if (this.unmounted) return\n        const { isFetching, isLoaderVisible, gifs } = this.state\n        const prefetchCount = gifs.length\n        if (!isFetching && isLoaderVisible) {\n            this.setState({ isFetching: true, isError: false })\n            let gifs\n            try {\n                gifs = await this.paginator()\n            } catch (error) {\n                this.setState({ isFetching: false, isError: true })\n                const { onGifsFetchError } = this.props\n                if (onGifsFetchError) onGifsFetchError(error)\n            }\n            if (gifs) {\n                // if we've just fetched and we don't have\n                // any more gifs, we're done fetching\n                if (prefetchCount === gifs.length) {\n                    this.setState({ isDoneFetching: true })\n                } else {\n                    this.setState({ gifs, isFetching: false })\n                    const { onGifsFetched } = this.props\n                    if (onGifsFetched) onGifsFetched(gifs)\n                    this.onFetch()\n                }\n            }\n        }\n    })\n\n    render() {\n        const {\n            onGifVisible,\n            onGifRightClick,\n            className = Grid.className,\n            onGifSeen,\n            onGifClick,\n            user,\n            overlay,\n            hideAttribution,\n            noLink,\n            borderRadius,\n            noResultsMessage,\n            columns,\n            width,\n            gutter,\n            useTransform,\n            columnOffsets,\n            backgroundColor,\n            loaderConfig,\n            tabIndex = 0,\n            layoutType = 'GRID',\n            loader: LoaderVisual = DotsLoader,\n        } = this.props\n        const { gifWidth, gifs, isError, isDoneFetching } = this.state\n        const showLoader = !isDoneFetching\n        const isFirstLoad = gifs.length === 0\n        // get the height of each grid item\n        const itemHeights = gifs.map((gif) => getGifHeight(gif, gifWidth))\n        return (\n            <PingbackContextManager attributes={{ layout_type: layoutType }}>\n                <div className={className} style={{ width }}>\n                    <MasonryGrid\n                        itemHeights={itemHeights}\n                        useTransform={useTransform}\n                        itemWidth={gifWidth}\n                        columns={columns}\n                        gutter={gutter}\n                        columnOffsets={columnOffsets}\n                    >\n                        {gifs.map((gif) => (\n                            <Gif\n                                gif={gif}\n                                tabIndex={tabIndex}\n                                key={gif.id}\n                                width={gifWidth}\n                                onGifClick={onGifClick}\n                                onGifSeen={onGifSeen}\n                                onGifVisible={onGifVisible}\n                                onGifRightClick={onGifRightClick}\n                                user={user}\n                                overlay={overlay}\n                                backgroundColor={backgroundColor}\n                                hideAttribution={hideAttribution}\n                                noLink={noLink}\n                                borderRadius={borderRadius}\n                            />\n                        ))}\n                    </MasonryGrid>\n                    {!showLoader && gifs.length === 0 && noResultsMessage}\n                    {isError ? (\n                        <FetchError onClick={this.onFetch} />\n                    ) : (\n                        showLoader && (\n                            <Observer onVisibleChange={this.onLoaderVisible} config={loaderConfig}>\n                                <Loader isFirstLoad={isFirstLoad}>\n                                    <LoaderVisual className={Grid.loaderClassName} />\n                                </Loader>\n                            </Observer>\n                        )\n                    )}\n                </div>\n            </PingbackContextManager>\n        )\n    }\n}\n\nexport default Grid\n"]},"metadata":{},"sourceType":"script"}