{"ast":null,"code":"\"use strict\";\n\nvar __makeTemplateObject = this && this.__makeTemplateObject || function (cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n\n  return cooked;\n};\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSize = exports.initTheme = void 0;\n\nvar core_1 = require(\"@emotion/core\");\n\nvar styled_1 = __importDefault(require(\"@emotion/styled\"));\n\nvar initTheme = function (theme) {\n  return __assign({\n    mode: 'light',\n    searchbarHeight: 42,\n    smallSearchbarHeight: 35,\n    // bump the condensedMediaQuery to force if condensedMode is true\n    condensedMediaQuery: (theme === null || theme === void 0 ? void 0 : theme.condensedMode) ? \"max-width: 99999px\" : \"max-width: 480px\"\n  }, theme);\n};\n\nexports.initTheme = initTheme; // DRY but kinda ugly\n\nvar getSize = function (theme, includeWidth) {\n  if (includeWidth === void 0) {\n    includeWidth = false;\n  }\n\n  return core_1.css(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n    height: \", \"px;\\n    \", \";\\n    @media (\", \") {\\n        height: \", \"px;\\n        \", \";\\n    }\\n\"], [\"\\n    height: \", \"px;\\n    \", \";\\n    @media (\", \") {\\n        height: \", \"px;\\n        \", \";\\n    }\\n\"])), theme.searchbarHeight, includeWidth && core_1.css(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n        width: \", \"px;\\n    \"], [\"\\n        width: \", \"px;\\n    \"])), theme.searchbarHeight), theme.condensedMediaQuery, theme.smallSearchbarHeight, includeWidth && core_1.css(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n            width: \", \"px;\\n        \"], [\"\\n            width: \", \"px;\\n        \"])), theme.smallSearchbarHeight));\n};\n\nexports.getSize = getSize;\nexports.default = styled_1.default;\nvar templateObject_1, templateObject_2, templateObject_3;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAYO,IAAMA,SAAS,GAAG,UAACC,KAAD,EAA6B;AAClD;AACIC,QAAI,EAAE,OADV;AAEIC,mBAAe,EAAE,EAFrB;AAGIC,wBAAoB,EAAE,EAH1B;AAII;AACAC,uBAAmB,EAAE,MAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEC,aAAP,IAAuB,oBAAvB,GAA8C;AALvE,KAMOL,KANP;AAQH,CATM;;AAAMM,oBAASP,SAAT,C,CAWb;;AACO,IAAMQ,OAAO,GAAG,UAACP,KAAD,EAAqBQ,YAArB,EAAkD;AAA7B;AAAAA;AAA6B;;AAAK,oBAAGC,4LAC9C,WAD8C,EAK5E,iBAL4E,EAM1C,uBAN0C,EAOrC,eAPqC,EAWxE,YAXwE,GAAH,EAChET,KAAK,CAACE,eAD0D,EAExEM,YAAY,IACdE,WAAGC,uHAC+B,WAD/B,GAAH,EACaX,KAAK,CAACE,eADnB,CAH0E,EAMhEF,KAAK,CAACI,mBAN0D,EAO5DJ,KAAK,CAACG,oBAPsD,EAQpEK,YAAY,IACdE,WAAGE,mIACoC,eADpC,GAAH,EACaZ,KAAK,CAACG,oBADnB,CATsE;AAa7E,CAbM;;AAAMG,kBAAOC,OAAP;AAebD,kBAAeO,gBAAf","names":["initTheme","theme","mode","searchbarHeight","smallSearchbarHeight","condensedMediaQuery","condensedMode","exports","getSize","includeWidth","templateObject_3","core_1","templateObject_1","templateObject_2","styled_1"],"sources":["/home/simo/programming/web/projects/search-gifs/node_modules/@giphy/react-components/src/components/search-bar/theme.ts"],"sourcesContent":["import { css } from '@emotion/core'\nimport styled, { CreateStyled } from '@emotion/styled'\n\nexport type SearchTheme = {\n    mode: 'dark' | 'light'\n    // the height of the search bar on desktop\n    searchbarHeight: number\n    // the height of the search bar on mobile\n    smallSearchbarHeight: number\n    condensedMediaQuery?: string\n    condensedMode?: boolean\n}\n\nexport const initTheme = (theme?: Partial<SearchTheme>): SearchTheme => {\n    return {\n        mode: 'light',\n        searchbarHeight: 42,\n        smallSearchbarHeight: 35,\n        // bump the condensedMediaQuery to force if condensedMode is true\n        condensedMediaQuery: theme?.condensedMode ? `max-width: 99999px` : `max-width: 480px`,\n        ...theme,\n    }\n}\n\n// DRY but kinda ugly\nexport const getSize = (theme: SearchTheme, includeWidth: boolean = false) => css`\n    height: ${theme.searchbarHeight}px;\n    ${includeWidth &&\n    css`\n        width: ${theme.searchbarHeight}px;\n    `};\n    @media (${theme.condensedMediaQuery}) {\n        height: ${theme.smallSearchbarHeight}px;\n        ${includeWidth &&\n        css`\n            width: ${theme.smallSearchbarHeight}px;\n        `};\n    }\n`\n\nexport default styled as CreateStyled<SearchTheme>\n"]},"metadata":{},"sourceType":"script"}