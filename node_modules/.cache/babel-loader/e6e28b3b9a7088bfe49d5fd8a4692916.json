{"ast":null,"code":"\"use strict\";\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar js_util_1 = require(\"@giphy/js-util\");\n\nvar throttle_debounce_1 = require(\"throttle-debounce\");\n\nvar global_1 = __importDefault(require(\"./global\"));\n\nvar send_pingback_1 = require(\"./send-pingback\");\n\nvar queuedPingbackEvents = [];\nglobal_1.default.giphyRandomId = js_util_1.getPingbackId();\nvar loggedInUserId = '';\n\nfunction sendPingbacks() {\n  var sendEvents = __spreadArray([], queuedPingbackEvents);\n\n  queuedPingbackEvents = [];\n  send_pingback_1.sendPingback(sendEvents);\n}\n\nvar debouncedPingbackEvent = throttle_debounce_1.debounce(1000, sendPingbacks);\n(_a = global_1.default.addEventListener) === null || _a === void 0 ? void 0 : _a.call(global_1.default, 'beforeunload', sendPingbacks);\n\nvar pingback = function (_a) {\n  var userId = _a.userId,\n      eventType = _a.eventType,\n      actionType = _a.actionType,\n      attributes = _a.attributes,\n      _b = _a.queueEvents,\n      queueEvents = _b === void 0 ? true : _b,\n      analyticsResponsePayload = _a.analyticsResponsePayload; // save the user id for whenever create session is invoked\n\n  loggedInUserId = userId ? String(userId) : loggedInUserId;\n  var newEvent = {\n    ts: Date.now(),\n    attributes: attributes,\n    action_type: actionType,\n    user_id: js_util_1.getPingbackId(),\n    analytics_response_payload: analyticsResponsePayload\n  };\n\n  if (loggedInUserId) {\n    newEvent.logged_in_user_id = loggedInUserId;\n  } // add verification mode\n\n\n  if (newEvent.analytics_response_payload) {\n    newEvent.analytics_response_payload = \"\" + newEvent.analytics_response_payload + (js_util_1.Logger.ENABLED ? '&mode=verification' : '');\n  }\n\n  if (eventType) {\n    newEvent.event_type = eventType;\n  }\n\n  queuedPingbackEvents.push(newEvent);\n  queueEvents ? debouncedPingbackEvent() : sendPingbacks();\n};\n\nexports.default = pingback;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAGA,IAAIA,oBAAoB,GAAoB,EAA5C;AAEAC,iBAAGC,aAAH,GAAmBC,yBAAnB;AAEA,IAAIC,cAAc,GAAG,EAArB;;AAEA,SAASC,aAAT,GAAsB;AAClB,MAAMC,UAAU,qBAAON,oBAAP,CAAhB;;AACAA,sBAAoB,GAAG,EAAvB;AACAO,+BAAaD,UAAb;AACH;;AAED,IAAME,sBAAsB,GAAGC,6BAAS,IAAT,EAAeJ,aAAf,CAA/B;AAEA,uBAAGK,gBAAH,MAAmB,IAAnB,IAAmBC,aAAnB,GAAmB,MAAnB,GAAmBA,QAAnBV,gBAAmB,EAAG,cAAH,EAAmBI,aAAnB,CAAnB;;AAEA,IAAMO,QAAQ,GAAG,UAACD,EAAD,EAON;MANPE,MAAM;MACNC,SAAS;MACTC,UAAU;MACVC,UAAU;MACVC;MAAAC,WAAW,mBAAG,IAAH,GAAOD;MAClBE,wBAAwB,+BACjB,CACP;;AACAf,gBAAc,GAAGS,MAAM,GAAGO,MAAM,CAACP,MAAD,CAAT,GAAoBT,cAA3C;AAEA,MAAMiB,QAAQ,GAAkB;AAC5BC,MAAE,EAAEC,IAAI,CAACC,GAAL,EADwB;AAE5BR,cAAU,YAFkB;AAG5BS,eAAW,EAAEV,UAHe;AAI5BW,WAAO,EAAEvB,yBAJmB;AAK5BwB,8BAA0B,EAAER;AALA,GAAhC;;AAQA,MAAIf,cAAJ,EAAoB;AAChBiB,YAAQ,CAACO,iBAAT,GAA6BxB,cAA7B;AACH,GAdM,CAgBP;;;AACA,MAAIiB,QAAQ,CAACM,0BAAb,EAAyC;AACrCN,YAAQ,CAACM,0BAAT,GAAsC,KAAGN,QAAQ,CAACM,0BAAZ,IAClCxB,iBAAO0B,OAAP,GAAiB,oBAAjB,GAAwC,EADN,CAAtC;AAGH;;AAED,MAAIf,SAAJ,EAAe;AACXO,YAAQ,CAACS,UAAT,GAAsBhB,SAAtB;AACH;;AAEDd,sBAAoB,CAAC+B,IAArB,CAA0BV,QAA1B;AAEAH,aAAW,GAAGV,sBAAsB,EAAzB,GAA8BH,aAAa,EAAtD;AACH,CArCD;;AAuCA2B,kBAAepB,QAAf","names":["queuedPingbackEvents","global_1","giphyRandomId","js_util_1","loggedInUserId","sendPingbacks","sendEvents","send_pingback_1","debouncedPingbackEvent","throttle_debounce_1","addEventListener","_a","pingback","userId","eventType","actionType","attributes","_b","queueEvents","analyticsResponsePayload","String","newEvent","ts","Date","now","action_type","user_id","analytics_response_payload","logged_in_user_id","ENABLED","event_type","push","exports"],"sources":["/home/simo/programming/web/projects/search-gifs/node_modules/@giphy/js-analytics/src/pingback.ts"],"sourcesContent":["import { getPingbackId, Logger } from '@giphy/js-util'\nimport { debounce } from 'throttle-debounce'\nimport gl from './global'\nimport { sendPingback } from './send-pingback'\nimport { Pingback, PingbackEvent } from './types'\n\nlet queuedPingbackEvents: PingbackEvent[] = []\n\ngl.giphyRandomId = getPingbackId()\n\nlet loggedInUserId = ''\n\nfunction sendPingbacks() {\n    const sendEvents = [...queuedPingbackEvents]\n    queuedPingbackEvents = []\n    sendPingback(sendEvents)\n}\n\nconst debouncedPingbackEvent = debounce(1000, sendPingbacks)\n\ngl.addEventListener?.('beforeunload', sendPingbacks)\n\nconst pingback = ({\n    userId,\n    eventType,\n    actionType,\n    attributes,\n    queueEvents = true,\n    analyticsResponsePayload,\n}: Pingback) => {\n    // save the user id for whenever create session is invoked\n    loggedInUserId = userId ? String(userId) : loggedInUserId\n\n    const newEvent: PingbackEvent = {\n        ts: Date.now(),\n        attributes,\n        action_type: actionType,\n        user_id: getPingbackId(),\n        analytics_response_payload: analyticsResponsePayload,\n    }\n\n    if (loggedInUserId) {\n        newEvent.logged_in_user_id = loggedInUserId\n    }\n\n    // add verification mode\n    if (newEvent.analytics_response_payload) {\n        newEvent.analytics_response_payload = `${newEvent.analytics_response_payload}${\n            Logger.ENABLED ? '&mode=verification' : ''\n        }`\n    }\n\n    if (eventType) {\n        newEvent.event_type = eventType\n    }\n\n    queuedPingbackEvents.push(newEvent)\n\n    queueEvents ? debouncedPingbackEvent() : sendPingbacks()\n}\n\nexport default pingback\n"]},"metadata":{},"sourceType":"script"}