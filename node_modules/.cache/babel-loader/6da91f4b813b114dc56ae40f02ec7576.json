{"ast":null,"code":"\"use strict\";\n\nvar __makeTemplateObject = this && this.__makeTemplateObject || function (cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n\n  return cooked;\n};\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar styled_1 = __importDefault(require(\"@emotion/styled\"));\n\nvar js_util_1 = require(\"@giphy/js-util\");\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar react_use_1 = require(\"react-use\");\n\nvar attribution_1 = __importDefault(require(\"./attribution\"));\n\nvar volume_1 = require(\"./controls/volume\");\n\nvar progress_bar_1 = __importDefault(require(\"./progress-bar\"));\n\nvar video_1 = __importDefault(require(\"./video\"));\n\nvar Container = styled_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n    position: relative;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    background: black;\\n    font-family: interface, helvetica, arial;\\n    -webkit-font-smoothing: antialiased;\\n\"], [\"\\n    position: relative;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    background: black;\\n    font-family: interface, helvetica, arial;\\n    -webkit-font-smoothing: antialiased;\\n\"])));\nvar Volume = styled_1.default.div(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    position: relative;\\n    cursor: pointer;\\n\"], [\"\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    position: relative;\\n    cursor: pointer;\\n\"])));\nvar Controls = styled_1.default.div(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n    position: absolute;\\n    top: 10px;\\n    right: 10px;\\n    left: 10px;\\n    bottom: 0;\\n    display: flex;\\n    justify-content: space-between;\\n    opacity: \", \";\\n    transition: opacity ease-out 250ms;\\n    align-items: flex-start;\\n\"], [\"\\n    position: absolute;\\n    top: 10px;\\n    right: 10px;\\n    left: 10px;\\n    bottom: 0;\\n    display: flex;\\n    justify-content: space-between;\\n    opacity: \", \";\\n    transition: opacity ease-out 250ms;\\n    align-items: flex-start;\\n\"])), function (props) {\n  return props.isHovered ? 1 : 0;\n});\nvar Title = styled_1.default.div(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"\\n    font-size: 26px;\\n    color: white;\\n    margin-bottom: 5px;\\n    font-weight: bold;\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n    white-space: nowrap;\\n    user-select: none;\\n    cursor: pointer;\\n\"], [\"\\n    font-size: 26px;\\n    color: white;\\n    margin-bottom: 5px;\\n    font-weight: bold;\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n    white-space: nowrap;\\n    user-select: none;\\n    cursor: pointer;\\n\"])));\nvar TitleContainer = styled_1.default.div(templateObject_5 || (templateObject_5 = __makeTemplateObject([\"\\n    position: relative;\\n    min-width: 0;\\n\"], [\"\\n    position: relative;\\n    min-width: 0;\\n\"])));\nvar Gradient = styled_1.default.div(templateObject_6 || (templateObject_6 = __makeTemplateObject([\"\\n    &:before {\\n        background: linear-gradient(rgba(18, 18, 18, 0.6), rgba(0, 0, 0, 0));\\n        content: '';\\n        height: \", \"px;\\n        left: 0;\\n        pointer-events: none;\\n        position: absolute;\\n        top: 0;\\n        width: 100%;\\n    }\\n    &:after {\\n        background: linear-gradient(rgba(0, 0, 0, 0), rgba(18, 18, 18, 0.6));\\n        content: '';\\n        height: \", \"px;\\n        left: 0;\\n        pointer-events: none;\\n        position: absolute;\\n        bottom: 0;\\n        width: 100%;\\n    }\\n\"], [\"\\n    &:before {\\n        background: linear-gradient(rgba(18, 18, 18, 0.6), rgba(0, 0, 0, 0));\\n        content: '';\\n        height: \", \"px;\\n        left: 0;\\n        pointer-events: none;\\n        position: absolute;\\n        top: 0;\\n        width: 100%;\\n    }\\n    &:after {\\n        background: linear-gradient(rgba(0, 0, 0, 0), rgba(18, 18, 18, 0.6));\\n        content: '';\\n        height: \", \"px;\\n        left: 0;\\n        pointer-events: none;\\n        position: absolute;\\n        bottom: 0;\\n        width: 100%;\\n    }\\n\"])), function (props) {\n  return props.isLargePlayer ? 125 : 75;\n}, function (props) {\n  return props.isLargePlayer ? 125 : 75;\n});\nvar LARGE_PLAYER_HEIGHT = 300;\nvar AUTO_HIDE_TIMEOUT = 4000;\n\nvar VideoPlayer = function (props) {\n  var width = props.width,\n      hideMute = props.hideMute,\n      hideAttribution = props.hideAttribution,\n      hideProgressBar = props.hideProgressBar,\n      className = props.className,\n      persistentControls = props.persistentControls,\n      gif = props.gif,\n      Overlay = props.overlay;\n\n  var _a = react_1.useState(false),\n      isHovered = _a[0],\n      setIsHovered = _a[1];\n\n  var _b = react_1.useState(null),\n      videoEl = _b[0],\n      _setVideoEl = _b[1];\n\n  var _c = react_1.useState(props.muted),\n      muted = _c[0],\n      setMuted = _c[1];\n\n  var _d = react_1.useState(false),\n      mutedByBrowser = _d[0],\n      setMutedByBrowser = _d[1];\n\n  var setVideoEl = props.setVideoEl,\n      onMuted = props.onMuted,\n      onUserMuted = props.onUserMuted;\n  var height = props.height || js_util_1.getGifHeight(gif, width);\n\n  var _e = react_use_1.useTimeoutFn(function () {\n    setIsHovered(false);\n  }, AUTO_HIDE_TIMEOUT),\n      cancelHideTimeout = _e[1],\n      resetHideTimeout = _e[2];\n\n  var combinedOnMuted = react_1.useCallback(function (args) {\n    onMuted === null || onMuted === void 0 ? void 0 : onMuted(args);\n    setMutedByBrowser(args);\n  }, [setMutedByBrowser, onMuted]);\n  var combinedSetVideoEl = react_1.useCallback(function (args) {\n    setVideoEl === null || setVideoEl === void 0 ? void 0 : setVideoEl(args);\n\n    _setVideoEl(args);\n  }, [setVideoEl, _setVideoEl]);\n\n  var toggleMute = function () {\n    if (mutedByBrowser) {\n      setMutedByBrowser(false);\n      setMuted(false);\n    } else {\n      setMuted(!muted);\n    }\n  };\n\n  react_1.useEffect(function () {\n    setMuted(props.muted);\n  }, [props.muted]);\n  var showControls = persistentControls || isHovered;\n  var isLargePlayer = height >= LARGE_PLAYER_HEIGHT; // Manage auto hide controls\n\n  react_1.useEffect(function () {\n    if (showControls) {\n      resetHideTimeout();\n    } else {\n      cancelHideTimeout();\n    }\n\n    return function () {\n      return cancelHideTimeout();\n    };\n  }, [showControls, cancelHideTimeout, resetHideTimeout]);\n  return react_1.default.createElement(Container, {\n    className: className,\n    style: {\n      width: width,\n      height: height\n    },\n    onMouseOver: function () {\n      return setIsHovered(true);\n    },\n    onMouseLeave: function () {\n      return setIsHovered(false);\n    },\n    onMouseMove: function () {\n      setIsHovered(true);\n      resetHideTimeout();\n    },\n    onClick: function (e) {\n      // TODO on mobile, maybe here we'd want to not mute if\n      // controls are hidden, mute and show controls are the same action\n      // which could be annoying\n      onUserMuted === null || onUserMuted === void 0 ? void 0 : onUserMuted(!(muted || mutedByBrowser)); // adding this, it may save us if the browser blocks autoplay\n\n      videoEl === null || videoEl === void 0 ? void 0 : videoEl.play();\n      e.preventDefault();\n      toggleMute();\n    }\n  }, react_1.default.createElement(video_1.default, __assign({}, props, {\n    onMuted: combinedOnMuted,\n    setVideoEl: combinedSetVideoEl,\n    muted: muted\n  })), showControls && react_1.default.createElement(Gradient, {\n    isLargePlayer: isLargePlayer\n  }), react_1.default.createElement(Controls, {\n    isHovered: showControls\n  }, react_1.default.createElement(TitleContainer, null, isLargePlayer && react_1.default.createElement(Title, {\n    onClick: function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      window.open(gif.url, '_blank');\n    }\n  }, gif.title), videoEl && !hideAttribution ? react_1.default.createElement(attribution_1.default, {\n    gif: gif\n  }) : null), !hideMute && react_1.default.createElement(Volume, null, muted || mutedByBrowser ? react_1.default.createElement(volume_1.VolumeOffIcon, null) : react_1.default.createElement(volume_1.VolumeOnIcon, null))), showControls && !hideProgressBar && videoEl ? react_1.default.createElement(progress_bar_1.default, {\n    videoEl: videoEl\n  }) : null, Overlay && react_1.default.createElement(Overlay, {\n    gif: gif,\n    isHovered: isHovered,\n    width: width,\n    height: height\n  }));\n};\n\nvar VideoWrapper = function (props) {\n  if (props.overlay && !props.controls) {\n    console.warn(js_util_1.Logger.PREFIX + \": Overlays only work when controls are enabled\");\n  }\n\n  return props.controls ? react_1.default.createElement(VideoPlayer, __assign({}, props)) : react_1.default.createElement(video_1.default, __assign({}, props));\n};\n\nexports.default = VideoWrapper;\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6;","map":{"version":3,"mappings":"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","names":["Container","styled_1","div","templateObject_1","Volume","templateObject_2","Controls","templateObject_3","props","isHovered","Title","templateObject_4","TitleContainer","templateObject_5","Gradient","templateObject_6","isLargePlayer","LARGE_PLAYER_HEIGHT","AUTO_HIDE_TIMEOUT","VideoPlayer","hideMute","hideAttribution","hideProgressBar","className","persistentControls","gif","Overlay","react_1","setIsHovered","videoEl","_setVideoEl","muted","setMuted","mutedByBrowser","setMutedByBrowser","onMuted","onUserMuted","height","js_util_1","width","react_use_1","cancelHideTimeout","resetHideTimeout","combinedOnMuted","args","combinedSetVideoEl","setVideoEl","toggleMute","showControls","style","onMouseOver","onMouseLeave","onMouseMove","onClick","e","play","preventDefault","video_1","__assign","stopPropagation","window","open","url","title","attribution_1","volume_1","progress_bar_1","VideoWrapper","overlay","controls","console","warn","PREFIX","exports"],"sources":["/home/simo/programming/web/projects/search-gifs/node_modules/@giphy/react-components/src/components/video/index.tsx"],"sourcesContent":["import styled from '@emotion/styled'\nimport { getGifHeight, Logger } from '@giphy/js-util'\nimport React, { ComponentProps, ElementType, useCallback, useEffect, useState } from 'react'\nimport { useTimeoutFn } from 'react-use'\nimport { GifOverlayProps } from '../types'\nimport Attribution from './attribution'\nimport { VolumeOffIcon, VolumeOnIcon } from './controls/volume'\nimport ProgressBar from './progress-bar'\nimport Video from './video'\n\ntype Props = {\n    // turns on all controls\n    controls?: boolean\n    // if controls is true, hides progress bar\n    hideProgressBar?: boolean\n    // if controls is true, hides mute\n    hideMute?: boolean\n    // hide attribution\n    hideAttribution?: boolean\n    // don't hide controls when hovering away\n    persistentControls?: boolean\n    // for saving the state of the user muted\n    onUserMuted?: (muted: boolean) => void\n    // add a component that overlays the video\n    // and can hide when hovered\n    // TODO this should possibly be in video/video.tsx,\n    // similar to how gif.tsx has the overlay\n    // but we'd have to move the hover stuff into there\n    overlay?: ElementType<GifOverlayProps>\n}\n\nconst Container = styled.div`\n    position: relative;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: black;\n    font-family: interface, helvetica, arial;\n    -webkit-font-smoothing: antialiased;\n`\n\nconst Volume = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    cursor: pointer;\n`\n\nconst Controls = styled.div<{ isHovered: boolean }>`\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    left: 10px;\n    bottom: 0;\n    display: flex;\n    justify-content: space-between;\n    opacity: ${(props) => (props.isHovered ? 1 : 0)};\n    transition: opacity ease-out 250ms;\n    align-items: flex-start;\n`\n\nconst Title = styled.div`\n    font-size: 26px;\n    color: white;\n    margin-bottom: 5px;\n    font-weight: bold;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    user-select: none;\n    cursor: pointer;\n`\nconst TitleContainer = styled.div`\n    position: relative;\n    min-width: 0;\n`\n\nconst Gradient = styled.div<{ isLargePlayer: boolean }>`\n    &:before {\n        background: linear-gradient(rgba(18, 18, 18, 0.6), rgba(0, 0, 0, 0));\n        content: '';\n        height: ${(props) => (props.isLargePlayer ? 125 : 75)}px;\n        left: 0;\n        pointer-events: none;\n        position: absolute;\n        top: 0;\n        width: 100%;\n    }\n    &:after {\n        background: linear-gradient(rgba(0, 0, 0, 0), rgba(18, 18, 18, 0.6));\n        content: '';\n        height: ${(props) => (props.isLargePlayer ? 125 : 75)}px;\n        left: 0;\n        pointer-events: none;\n        position: absolute;\n        bottom: 0;\n        width: 100%;\n    }\n`\n\nconst LARGE_PLAYER_HEIGHT = 300\nconst AUTO_HIDE_TIMEOUT = 4000\nconst VideoPlayer = (props: ComponentProps<typeof VideoWrapper>) => {\n    const {\n        width,\n        hideMute,\n        hideAttribution,\n        hideProgressBar,\n        className,\n        persistentControls,\n        gif,\n        overlay: Overlay,\n    } = props\n    const [isHovered, setIsHovered] = useState(false)\n    const [videoEl, _setVideoEl] = useState<HTMLVideoElement | null>(null)\n    const [muted, setMuted] = useState<boolean | undefined>(props.muted)\n    const [mutedByBrowser, setMutedByBrowser] = useState(false)\n    const { setVideoEl, onMuted, onUserMuted } = props\n    const height = props.height || getGifHeight(gif, width)\n    const [, cancelHideTimeout, resetHideTimeout] = useTimeoutFn(() => {\n        setIsHovered(false)\n    }, AUTO_HIDE_TIMEOUT)\n\n    const combinedOnMuted = useCallback(\n        (args) => {\n            onMuted?.(args)\n            setMutedByBrowser(args)\n        },\n        [setMutedByBrowser, onMuted]\n    )\n    const combinedSetVideoEl = useCallback(\n        (args) => {\n            setVideoEl?.(args)\n            _setVideoEl(args)\n        },\n        [setVideoEl, _setVideoEl]\n    )\n    const toggleMute = () => {\n        if (mutedByBrowser) {\n            setMutedByBrowser(false)\n            setMuted(false)\n        } else {\n            setMuted(!muted)\n        }\n    }\n    useEffect(() => {\n        setMuted(props.muted)\n    }, [props.muted])\n    const showControls = persistentControls || isHovered\n    const isLargePlayer = height >= LARGE_PLAYER_HEIGHT\n    // Manage auto hide controls\n    useEffect(() => {\n        if (showControls) {\n            resetHideTimeout()\n        } else {\n            cancelHideTimeout()\n        }\n        return () => cancelHideTimeout()\n    }, [showControls, cancelHideTimeout, resetHideTimeout])\n    return (\n        <Container\n            className={className}\n            style={{ width, height }}\n            onMouseOver={() => setIsHovered(true)}\n            onMouseLeave={() => setIsHovered(false)}\n            onMouseMove={() => {\n                setIsHovered(true)\n                resetHideTimeout()\n            }}\n            onClick={(e) => {\n                // TODO on mobile, maybe here we'd want to not mute if\n                // controls are hidden, mute and show controls are the same action\n                // which could be annoying\n                onUserMuted?.(!(muted || mutedByBrowser))\n                // adding this, it may save us if the browser blocks autoplay\n                videoEl?.play()\n                e.preventDefault()\n                toggleMute()\n            }}\n        >\n            <Video {...props} onMuted={combinedOnMuted} setVideoEl={combinedSetVideoEl} muted={muted} />\n            {showControls && <Gradient isLargePlayer={isLargePlayer} />}\n            <Controls isHovered={showControls}>\n                <TitleContainer>\n                    {isLargePlayer && (\n                        <Title\n                            onClick={(e) => {\n                                e.preventDefault()\n                                e.stopPropagation()\n                                window.open(gif.url, '_blank')\n                            }}\n                        >\n                            {gif.title}\n                        </Title>\n                    )}\n                    {videoEl && !hideAttribution ? <Attribution gif={gif} /> : null}\n                </TitleContainer>\n                {!hideMute && <Volume>{muted || mutedByBrowser ? <VolumeOffIcon /> : <VolumeOnIcon />}</Volume>}\n            </Controls>\n            {showControls && !hideProgressBar && videoEl ? <ProgressBar videoEl={videoEl} /> : null}\n            {Overlay && <Overlay gif={gif} isHovered={isHovered} width={width} height={height} />}\n        </Container>\n    )\n}\n\nconst VideoWrapper = (props: ComponentProps<typeof Video> & Props) => {\n    if (props.overlay && !props.controls) {\n        console.warn(`${Logger.PREFIX}: Overlays only work when controls are enabled`)\n    }\n    return props.controls ? <VideoPlayer {...props} /> : <Video {...props} />\n}\n\nexport default VideoWrapper\n"]},"metadata":{},"sourceType":"script"}