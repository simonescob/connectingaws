{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldFireQuartile = exports.getErrorMessage = void 0;\n\nvar getErrorMessage = function (code, src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  switch (code) {\n    case 1:\n      return \"Aborted. The fetching process for the media resource was aborted by the user agent at the user's request.\";\n\n    case 2:\n      return 'Network Error. A network error of some description caused the user agent to stop fetching the media resource, after the resource was established to be usable.';\n\n    case 3:\n      return 'Decode Error. An error of some description occurred while decoding the media resource, after the resource was established to be usable.';\n\n    case 4:\n      return \"Can not play a video of type \\\"\" + src.split('.').pop() + \"\\\" on this platform.\";\n\n    default:\n      return '';\n  }\n};\n\nexports.getErrorMessage = getErrorMessage;\n\nvar shouldFireQuartile = function (quartile, playhead, duration, quartilesFired, loopNumber) {\n  var currentQuartile = loopNumber + quartile; // NOTE: Should only fire on first loop, if looping.\n\n  if (!quartilesFired.has(currentQuartile) && duration > 0 && playhead > duration * quartile) {\n    quartilesFired.add(currentQuartile);\n    return true;\n  }\n\n  return false;\n};\n\nexports.shouldFireQuartile = shouldFireQuartile;","map":{"version":3,"mappings":";;;;;;;AAEO,IAAMA,eAAe,GAAG,UAACC,IAAD,EAAeC,GAAf,EAAuB;AAAR;AAAAA;AAAQ;;AAClD,UAAQD,IAAR;AACI,SAAK,CAAL;AACI,aAAO,2GAAP;;AACJ,SAAK,CAAL;AACI,aAAO,gKAAP;;AACJ,SAAK,CAAL;AACI,aAAO,yIAAP;;AACJ,SAAK,CAAL;AACI,aAAO,oCAAiCC,GAAG,CAACC,KAAJ,CAAU,GAAV,EAAeC,GAAf,EAAjC,GAAqD,sBAA5D;;AACJ;AACI,aAAO,EAAP;AAVR;AAYH,CAbM;;AAAMC,0BAAeL,eAAf;;AAeN,IAAMM,kBAAkB,GAAG,UAC9BC,QAD8B,EAE9BC,QAF8B,EAG9BC,QAH8B,EAI9BC,cAJ8B,EAK9BC,UAL8B,EAKZ;AAElB,MAAMC,eAAe,GAAGD,UAAU,GAAGJ,QAArC,CAFkB,CAGlB;;AACA,MAAI,CAACG,cAAc,CAACG,GAAf,CAAmBD,eAAnB,CAAD,IAAwCH,QAAQ,GAAG,CAAnD,IAAwDD,QAAQ,GAAGC,QAAQ,GAAGF,QAAlF,EAA4F;AACxFG,kBAAc,CAACI,GAAf,CAAmBF,eAAnB;AACA,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH,CAdM;;AAAMP,6BAAkBC,kBAAlB","names":["getErrorMessage","code","src","split","pop","exports","shouldFireQuartile","quartile","playhead","duration","quartilesFired","loopNumber","currentQuartile","has","add"],"sources":["/home/simo/programming/web/projects/search-gifs/node_modules/@giphy/react-components/src/components/video/util.ts"],"sourcesContent":["export type QuartileEvent = 0.25 | 0.5 | 0.75\n\nexport const getErrorMessage = (code: number, src = '') => {\n    switch (code) {\n        case 1:\n            return \"Aborted. The fetching process for the media resource was aborted by the user agent at the user's request.\"\n        case 2:\n            return 'Network Error. A network error of some description caused the user agent to stop fetching the media resource, after the resource was established to be usable.'\n        case 3:\n            return 'Decode Error. An error of some description occurred while decoding the media resource, after the resource was established to be usable.'\n        case 4:\n            return `Can not play a video of type \"${src.split('.').pop()}\" on this platform.`\n        default:\n            return ''\n    }\n}\n\nexport const shouldFireQuartile = (\n    quartile: QuartileEvent,\n    playhead: number,\n    duration: number,\n    quartilesFired: Set<number>,\n    loopNumber: number\n): boolean => {\n    const currentQuartile = loopNumber + quartile\n    // NOTE: Should only fire on first loop, if looping.\n    if (!quartilesFired.has(currentQuartile) && duration > 0 && playhead > duration * quartile) {\n        quartilesFired.add(currentQuartile)\n        return true\n    }\n    return false\n}\n"]},"metadata":{},"sourceType":"script"}