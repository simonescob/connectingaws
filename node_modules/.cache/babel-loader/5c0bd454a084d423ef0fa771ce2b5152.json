{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar js_util_1 = require(\"@giphy/js-util\");\n\nvar mergeAttribute = function (attributes, newAttributes, key) {\n  var _a;\n\n  var result1 = js_util_1.pick(attributes, [key]);\n  var result2 = js_util_1.pick(newAttributes, [key]);\n\n  if (result1[key] && result2[key]) {\n    return __assign(__assign(__assign({}, attributes), newAttributes), (_a = {}, _a[key] = result1[key] + ', ' + result2[key], _a));\n  }\n\n  return __assign(__assign({}, attributes), newAttributes);\n};\n\nexports.default = mergeAttribute;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;AAGA,IAAMA,cAAc,GAAG,UAACC,UAAD,EAAiCC,aAAjC,EAAoEC,GAApE,EAA+E;;;AAClG,MAAMC,OAAO,GAAGC,eAAKJ,UAAL,EAAiB,CAACE,GAAD,CAAjB,CAAhB;AACA,MAAMG,OAAO,GAAGD,eAAKH,aAAL,EAAoB,CAACC,GAAD,CAApB,CAAhB;;AACA,MAAIC,OAAO,CAACD,GAAD,CAAP,IAAgBG,OAAO,CAACH,GAAD,CAA3B,EAAkC;AAC9B,0CAAYF,UAAZ,GAA2BC,aAA3B,IAAwCK,SAAOA,GAACJ,GAAD,IAAOC,OAAO,CAACD,GAAD,CAAP,GAAe,IAAf,GAAsBG,OAAO,CAACH,GAAD,CAA3C,EAAgDI,EAAxF;AACH;;AACD,+BAAYN,UAAZ,GAA2BC,aAA3B;AACH,CAPD;;AASAM,kBAAeR,cAAf","names":["mergeAttribute","attributes","newAttributes","key","result1","js_util_1","result2","_a","exports"],"sources":["/home/simo/programming/web/projects/search-gifs/node_modules/@giphy/js-analytics/src/merge-attributes.ts"],"sourcesContent":["import { pick } from '@giphy/js-util'\nimport { PingbackAttributes } from './types'\n\nconst mergeAttribute = (attributes: PingbackAttributes, newAttributes: PingbackAttributes, key: string) => {\n    const result1 = pick(attributes, [key])\n    const result2 = pick(newAttributes, [key])\n    if (result1[key] && result2[key]) {\n        return { ...attributes, ...newAttributes, ...{ [key]: result1[key] + ', ' + result2[key] } }\n    }\n    return { ...attributes, ...newAttributes }\n}\n\nexport default mergeAttribute\n"]},"metadata":{},"sourceType":"script"}