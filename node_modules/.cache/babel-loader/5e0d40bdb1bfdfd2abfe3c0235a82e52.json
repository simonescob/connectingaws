{"ast":null,"code":"\"use strict\";\n\nvar __makeTemplateObject = this && this.__makeTemplateObject || function (cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n\n  return cooked;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar styled_1 = __importDefault(require(\"@emotion/styled\"));\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar avatar_1 = __importDefault(require(\"./avatar\"));\n\nvar user_1 = __importDefault(require(\"./user\"));\n\nvar Container = styled_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n    display: flex;\\n    align-items: center;\\n    font-family: interface, helvetica, arial;\\n\"], [\"\\n    display: flex;\\n    align-items: center;\\n    font-family: interface, helvetica, arial;\\n\"])));\nvar Avatar = styled_1.default(avatar_1.default)(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n    flex-shrink: 0;\\n\"], [\"\\n    flex-shrink: 0;\\n\"])));\n\nvar Attribution = function (_a) {\n  var gif = _a.gif,\n      className = _a.className,\n      onClick = _a.onClick;\n  var user = gif.user;\n\n  if (!(user === null || user === void 0 ? void 0 : user.username) && !(user === null || user === void 0 ? void 0 : user.display_name)) {\n    return null;\n  }\n\n  return react_1.default.createElement(Container, {\n    className: [Attribution.className, className].join(' '),\n    onClick: function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (onClick) {\n        onClick(gif);\n      } else {\n        var url = user.profile_url;\n        if (url) window.open(url, '_blank');\n      }\n    }\n  }, react_1.default.createElement(Avatar, {\n    user: user\n  }), react_1.default.createElement(user_1.default, {\n    user: gif.user\n  }));\n};\n\nAttribution.className = 'giphy-attribution';\nexports.default = Attribution;\nvar templateObject_1, templateObject_2;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAEA,IAAMA,SAAS,GAAGC,iBAAOC,GAAP,CAAUC,uQAAV,CAAlB;AAKA,IAAMC,MAAM,GAAGH,iBAAOI,gBAAP,EAAeC,uHAAf,CAAf;;AAKA,IAAMC,WAAW,GAAG,UAACC,EAAD,EAAmC;MAAhCC,GAAG;MAAEC,SAAS;MAAEC,OAAO;AAClC,UAAI,GAAKF,GAAG,KAAZ;;AACR,MAAI,EAACG,IAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEC,QAAP,KAAmB,EAACD,IAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEE,YAAP,CAAvB,EAA4C;AACxC,WAAO,IAAP;AACH;;AACD,SACIC,8BAACf,SAAD,EAAU;AACNU,aAAS,EAAE,CAACH,WAAW,CAACG,SAAb,EAAwBA,SAAxB,EAAmCM,IAAnC,CAAwC,GAAxC,CADL;AAENL,WAAO,EAAE,UAACM,CAAD,EAAE;AACPA,OAAC,CAACC,cAAF;AACAD,OAAC,CAACE,eAAF;;AACA,UAAIR,OAAJ,EAAa;AACTA,eAAO,CAACF,GAAD,CAAP;AACH,OAFD,MAEO;AACH,YAAMW,GAAG,GAAIR,IAAqB,CAACS,WAAnC;AACA,YAAID,GAAJ,EAASE,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiB,QAAjB;AACZ;AACJ;AAXK,GAAV,EAaIL,8BAACX,MAAD,EAAO;AAACQ,QAAI,EAAEA;AAAP,GAAP,CAbJ,EAcIG,8BAACS,cAAD,EAAK;AAACZ,QAAI,EAAEH,GAAG,CAACG;AAAX,GAAL,CAdJ,CADJ;AAkBH,CAvBD;;AAwBAL,WAAW,CAACG,SAAZ,GAAwB,mBAAxB;AACAe,kBAAelB,WAAf","names":["Container","styled_1","div","templateObject_1","Avatar","avatar_1","templateObject_2","Attribution","_a","gif","className","onClick","user","username","display_name","react_1","join","e","preventDefault","stopPropagation","url","profile_url","window","open","user_1","exports"],"sources":["/home/simo/programming/web/projects/search-gifs/node_modules/@giphy/react-components/src/components/attribution/index.tsx"],"sourcesContent":["import styled from '@emotion/styled'\nimport { IGif, IProfileUser } from '@giphy/js-types'\nimport React from 'react'\nimport Avatar_ from './avatar'\nimport User from './user'\n\nconst Container = styled.div`\n    display: flex;\n    align-items: center;\n    font-family: interface, helvetica, arial;\n`\nconst Avatar = styled(Avatar_)`\n    flex-shrink: 0;\n`\n\ntype Props = { gif: IGif; className?: string; onClick?: (gif: IGif) => void }\nconst Attribution = ({ gif, className, onClick }: Props) => {\n    const { user } = gif\n    if (!user?.username && !user?.display_name) {\n        return null\n    }\n    return (\n        <Container\n            className={[Attribution.className, className].join(' ')}\n            onClick={(e) => {\n                e.preventDefault()\n                e.stopPropagation()\n                if (onClick) {\n                    onClick(gif)\n                } else {\n                    const url = (user as IProfileUser).profile_url\n                    if (url) window.open(url, '_blank')\n                }\n            }}\n        >\n            <Avatar user={user} />\n            <User user={gif.user} />\n        </Container>\n    )\n}\nAttribution.className = 'giphy-attribution'\nexport default Attribution\n"]},"metadata":{},"sourceType":"script"}