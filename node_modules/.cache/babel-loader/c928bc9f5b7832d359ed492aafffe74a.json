{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar js_analytics_1 = require(\"@giphy/js-analytics\");\n\nvar js_util_1 = require(\"@giphy/js-util\");\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar util_1 = require(\"./util\");\n\nvar quartileEvents = [0.25, 0.5, 0.75];\nvar videoClassName = 'giphy-video';\nvar Network = {\n  // The element has not yet been initialized. All attributes are in their initial states.\n  EMPTY: 0,\n  // The element's resource selection algorithm is active and has selected a resource, but it is not actually using the network at this time.\n  IDLE: 1,\n  // The user agent is actively trying to download data.\n  LOADING: 2,\n  // The element's resource selection algorithm is active, but it has not yet found a resource to use.\n  NO_SOURCE: 3\n};\n\nvar Video = function (_a) {\n  var _b, _c, _d;\n\n  var muted = _a.muted,\n      _e = _a.ccEnabled,\n      ccEnabled = _e === void 0 ? false : _e,\n      _f = _a.ccLanguage,\n      ccLanguage = _f === void 0 ? 'en' : _f,\n      _g = _a.loop,\n      loop = _g === void 0 ? true : _g,\n      onStateChange = _a.onStateChange,\n      onTimeUpdate = _a.onTimeUpdate,\n      onCanPlay = _a.onCanPlay,\n      onFirstPlay = _a.onFirstPlay,\n      onWaiting = _a.onWaiting,\n      onMuted = _a.onMuted,\n      onError = _a.onError,\n      onEnded = _a.onEnded,\n      onLoop = _a.onLoop,\n      onQuartile = _a.onQuartile,\n      onEndFullscreen = _a.onEndFullscreen,\n      setVideoEl = _a.setVideoEl,\n      gif = _a.gif,\n      width = _a.width,\n      height_ = _a.height,\n      _h = _a.volume,\n      volume = _h === void 0 ? 0.7 : _h,\n      _j = _a.className,\n      className = _j === void 0 ? videoClassName : _j;\n  var height = height_ || js_util_1.getGifHeight(gif, width); // state\n\n  var _k = react_1.useState(js_util_1.getBestVideo(gif.video, width, height)),\n      media = _k[0],\n      setMedia = _k[1];\n\n  var seek = react_1.useRef(0);\n\n  if (!media) {\n    // Not all gif requests have video content\n    // use { type: 'videos' } for search or trending endpoints\n    console.warn(\"GiphyJS No video content for id: \" + gif.id);\n  }\n\n  var mountTime = react_1.useRef(Date.now());\n  var hasPlayingFired = react_1.useRef(false);\n  var loopNumber = react_1.useRef(0);\n  var waitingCount = react_1.useRef(0);\n  var quartilesFired = react_1.useRef(new Set()); // reset the above when the gif.id changes\n\n  react_1.useEffect(function () {\n    mountTime.current = Date.now();\n    hasPlayingFired.current = false;\n    loopNumber.current = 1;\n    waitingCount.current = 0;\n    quartilesFired.current = new Set();\n  }, [gif.id]);\n  var videoEl = react_1.useRef(null);\n  react_1.useEffect(function () {\n    // when the width and height change, check if there's a new url\n    var newMedia = js_util_1.getBestVideo(gif.video, width, height);\n\n    if (videoEl.current && (media === null || media === void 0 ? void 0 : media.url) && newMedia.url !== media.url) {\n      // we may have changed gifs, we don't want to seek then\n      if (media.url.indexOf(String(gif.id)) !== -1) {\n        // when the media changes set the current seek time\n        seek.current = videoEl.current.currentTime;\n      } // triggers re-render with above seek time\n\n\n      setMedia(newMedia);\n    }\n  }, [width, height_, gif.video, height, media === null || media === void 0 ? void 0 : media.url, gif.id]);\n  react_1.useEffect(function () {\n    if (videoEl.current && (media === null || media === void 0 ? void 0 : media.url) && seek.current) {\n      videoEl.current.currentTime = seek.current;\n      seek.current = 0;\n    }\n  }, [media === null || media === void 0 ? void 0 : media.url, seek]);\n\n  var _onError = react_1.useCallback(function () {\n    var _a;\n\n    var el = videoEl.current;\n    var code = (_a = el === null || el === void 0 ? void 0 : el.error) === null || _a === void 0 ? void 0 : _a.code;\n\n    if (code && (el === null || el === void 0 ? void 0 : el.src)) {\n      var message = util_1.getErrorMessage(code, el === null || el === void 0 ? void 0 : el.src);\n      console.error(message);\n      onError === null || onError === void 0 ? void 0 : onError(code);\n    }\n  }, [onError]);\n\n  var _onPlaying = react_1.useCallback(function () {\n    onStateChange === null || onStateChange === void 0 ? void 0 : onStateChange('playing');\n\n    if (!hasPlayingFired.current) {\n      hasPlayingFired.current = true;\n\n      if (gif.analytics_response_payload) {\n        js_analytics_1.pingback({\n          actionType: 'START',\n          analyticsResponsePayload: gif.analytics_response_payload\n        });\n      }\n\n      onFirstPlay === null || onFirstPlay === void 0 ? void 0 : onFirstPlay(Date.now() - mountTime.current);\n    }\n  }, [onFirstPlay, onStateChange, gif]);\n\n  var _onPaused = react_1.useCallback(function () {\n    return onStateChange === null || onStateChange === void 0 ? void 0 : onStateChange('paused');\n  }, [onStateChange]);\n\n  var _onTimeUpdate = react_1.useCallback(function () {\n    var el = videoEl.current;\n\n    if (el) {\n      var playhead_1 = el.currentTime;\n      quartileEvents.some(function (q) {\n        if (util_1.shouldFireQuartile(q, playhead_1, el.duration, quartilesFired.current, loopNumber.current)) {\n          onQuartile === null || onQuartile === void 0 ? void 0 : onQuartile(q);\n          return true;\n        }\n\n        return false;\n      });\n      onTimeUpdate === null || onTimeUpdate === void 0 ? void 0 : onTimeUpdate(playhead_1 || 0);\n    }\n  }, [onQuartile, onTimeUpdate]);\n\n  var _onCanPlay = react_1.useCallback(function () {\n    return onCanPlay === null || onCanPlay === void 0 ? void 0 : onCanPlay();\n  }, [onCanPlay]);\n\n  var _onWaiting = react_1.useCallback(function () {\n    var el = videoEl.current; // we get a waiting event after a loop, so ignore the first one while the play head is 0\n\n    if ((el === null || el === void 0 ? void 0 : el.currentTime) !== 0 && (el === null || el === void 0 ? void 0 : el.networkState) !== Network.IDLE) {\n      onWaiting === null || onWaiting === void 0 ? void 0 : onWaiting(++waitingCount.current);\n    }\n  }, [onWaiting]);\n\n  var _onEnded = react_1.useCallback(function () {\n    // helps prevent two ended events when changing media\n    if (!hasPlayingFired.current) {\n      return;\n    }\n\n    if (loop && videoEl.current) {\n      videoEl.current.play();\n    }\n\n    onLoop === null || onLoop === void 0 ? void 0 : onLoop(loopNumber.current);\n    loopNumber.current = loopNumber.current + 1;\n    onEnded === null || onEnded === void 0 ? void 0 : onEnded();\n  }, [onEnded, loop, onLoop]);\n\n  var _onEndFullscreen = react_1.useCallback(function () {\n    return onEndFullscreen === null || onEndFullscreen === void 0 ? void 0 : onEndFullscreen();\n  }, [onEndFullscreen]);\n\n  var tryAutoPlayWithSound = react_1.useCallback(function (videoEl) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var promisePlay, error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!videoEl) return [3\n            /*break*/\n            , 4];\n            promisePlay = videoEl.play();\n            if (!(promisePlay !== undefined)) return [3\n            /*break*/\n            , 4];\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , promisePlay];\n\n          case 2:\n            _a.sent();\n\n            onMuted === null || onMuted === void 0 ? void 0 : onMuted(false);\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_1 = _a.sent(); // Autoplay not allowed!\n            // Mute video and try to play again\n\n            videoEl.muted = true; // Allow the UI to show that the video is muted\n\n            onMuted === null || onMuted === void 0 ? void 0 : onMuted(true);\n            videoEl.play();\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }, [onMuted]);\n  react_1.useEffect(function () {\n    var el = videoEl.current;\n\n    if (el) {\n      tryAutoPlayWithSound(el);\n      setVideoEl === null || setVideoEl === void 0 ? void 0 : setVideoEl(el);\n\n      if (!isNaN(volume)) {\n        el.volume = volume;\n      }\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  react_1.useEffect(function () {\n    var el = videoEl.current;\n\n    if (el) {\n      el.addEventListener('play', _onPlaying);\n      el.addEventListener('pause', _onPaused);\n      el.addEventListener('error', _onError);\n      el.addEventListener('timeupdate', _onTimeUpdate);\n      el.addEventListener('canplay', _onCanPlay);\n      el.addEventListener('ended', _onEnded);\n      el.addEventListener('waiting', _onWaiting);\n      el.addEventListener('webkitendfullscreen', _onEndFullscreen); // this is needed for iOS\n    }\n\n    return function () {\n      if (el) {\n        el.removeEventListener('play', _onPlaying);\n        el.removeEventListener('pause', _onPaused);\n        el.removeEventListener('error', _onError);\n        el.removeEventListener('timeupdate', _onTimeUpdate);\n        el.removeEventListener('canplay', _onCanPlay);\n        el.removeEventListener('ended', _onEnded);\n        el.removeEventListener('waiting', _onWaiting);\n        el.removeEventListener('webkitendfullscreen', _onEndFullscreen);\n      }\n    };\n  }, [_onPlaying, _onPaused, _onError, _onTimeUpdate, _onCanPlay, _onEnded, _onWaiting, _onEndFullscreen]);\n  var captionSrc = (_d = (_c = (_b = gif.video) === null || _b === void 0 ? void 0 : _b.captions) === null || _c === void 0 ? void 0 : _c[ccLanguage]) === null || _d === void 0 ? void 0 : _d.vtt;\n  return (media === null || media === void 0 ? void 0 : media.url) ? react_1.default.createElement(\"video\", {\n    crossOrigin: \"anonymous\",\n    draggable: true,\n    className: className,\n    width: width,\n    height: height,\n    muted: muted,\n    autoPlay: true,\n    playsInline: true,\n    ref: videoEl,\n    src: media === null || media === void 0 ? void 0 : media.url\n  }, ccEnabled && captionSrc && react_1.default.createElement(\"track\", {\n    label: \"English\",\n    kind: \"subtitles\",\n    srcLang: ccLanguage,\n    src: captionSrc,\n    default: true\n  })) : null;\n};\n\nVideo.className = videoClassName;\nexports.default = Video;","map":{"version":3,"mappings":"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","names":["quartileEvents","videoClassName","Network","EMPTY","IDLE","LOADING","NO_SOURCE","Video","_a","muted","_e","ccEnabled","_f","ccLanguage","_g","loop","onStateChange","onTimeUpdate","onCanPlay","onFirstPlay","onWaiting","onMuted","onError","onEnded","onLoop","onQuartile","onEndFullscreen","setVideoEl","gif","width","height_","_h","volume","_j","className","height","js_util_1","react_1","video","media","setMedia","seek","console","warn","id","mountTime","Date","now","hasPlayingFired","loopNumber","waitingCount","quartilesFired","Set","current","videoEl","newMedia","url","indexOf","String","currentTime","_onError","el","code","error","src","message","util_1","_onPlaying","analytics_response_payload","js_analytics_1","actionType","analyticsResponsePayload","_onPaused","_onTimeUpdate","playhead_1","some","q","duration","_onCanPlay","_onWaiting","networkState","_onEnded","play","_onEndFullscreen","tryAutoPlayWithSound","promisePlay","undefined","isNaN","addEventListener","removeEventListener","captionSrc","_b","captions","_c","_d","vtt","crossOrigin","draggable","autoPlay","playsInline","ref","label","kind","srcLang","default","exports"],"sources":["/home/simo/programming/web/projects/search-gifs/node_modules/@giphy/react-components/src/components/video/video.tsx"],"sourcesContent":["import { pingback } from '@giphy/js-analytics'\nimport { IGif, IImage } from '@giphy/js-types'\nimport { getBestVideo, getGifHeight } from '@giphy/js-util'\nimport React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { getErrorMessage, QuartileEvent, shouldFireQuartile } from './util'\n\nconst quartileEvents: QuartileEvent[] = [0.25, 0.5, 0.75]\nexport type MEDIA_STATE = 'playing' | 'paused'\nconst videoClassName = 'giphy-video'\nconst Network = {\n    // The element has not yet been initialized. All attributes are in their initial states.\n    EMPTY: 0,\n    // The element's resource selection algorithm is active and has selected a resource, but it is not actually using the network at this time.\n    IDLE: 1,\n    // The user agent is actively trying to download data.\n    LOADING: 2,\n    // The element's resource selection algorithm is active, but it has not yet found a resource to use.\n    NO_SOURCE: 3,\n}\n\ntype IVideo = NonNullable<IGif['video']>\n\ntype Props = {\n    onStateChange?: (state: MEDIA_STATE) => void\n    onTimeUpdate?: (playhead: number) => void\n    onError?: (error: number) => void\n    onCanPlay?: () => void\n    onFirstPlay?: (msTillPlay: number) => void\n    onEnded?: () => void\n    onWaiting?: (count: number) => void\n    onLoop?: (count: number) => void\n    onEndFullscreen?: () => void\n    setVideoEl?: (el: HTMLVideoElement) => void\n    onQuartile?: (quartile: QuartileEvent) => void\n    onMuted?: (isMuted: boolean) => void\n    muted?: boolean\n    ccEnabled?: boolean\n    ccLanguage?: keyof NonNullable<IVideo['captions']>\n    loop?: boolean\n    gif: IGif\n    width: number\n    height?: number\n    volume?: number\n    className?: string\n}\nconst Video = ({\n    muted,\n    ccEnabled = false,\n    ccLanguage = 'en',\n    loop = true,\n    onStateChange,\n    onTimeUpdate,\n    onCanPlay,\n    onFirstPlay,\n    onWaiting,\n    onMuted,\n    onError,\n    onEnded,\n    onLoop,\n    onQuartile,\n    onEndFullscreen,\n    setVideoEl,\n    gif,\n    width,\n    height: height_,\n    volume = 0.7,\n    className = videoClassName,\n}: Props) => {\n    const height = height_ || getGifHeight(gif, width)\n\n    // state\n    const [media, setMedia] = useState(getBestVideo(gif.video, width, height))\n    const seek = useRef(0)\n\n    if (!media) {\n        // Not all gif requests have video content\n        // use { type: 'videos' } for search or trending endpoints\n        console.warn(`GiphyJS No video content for id: ${gif.id}`)\n    }\n\n    const mountTime = useRef(Date.now())\n    const hasPlayingFired = useRef(false)\n    const loopNumber = useRef<number>(0)\n    const waitingCount = useRef<number>(0)\n    const quartilesFired = useRef<Set<number>>(new Set())\n\n    // reset the above when the gif.id changes\n    useEffect(() => {\n        mountTime.current = Date.now()\n        hasPlayingFired.current = false\n        loopNumber.current = 1\n        waitingCount.current = 0\n        quartilesFired.current = new Set()\n    }, [gif.id])\n\n    const videoEl = useRef<HTMLVideoElement | null>(null)\n\n    useEffect(() => {\n        // when the width and height change, check if there's a new url\n        const newMedia = getBestVideo(gif.video, width, height) as IImage\n        if (videoEl.current && media?.url && newMedia.url !== media.url) {\n            // we may have changed gifs, we don't want to seek then\n            if (media.url.indexOf(String(gif.id)) !== -1) {\n                // when the media changes set the current seek time\n                seek.current = videoEl.current.currentTime\n            }\n            // triggers re-render with above seek time\n            setMedia(newMedia)\n        }\n    }, [width, height_, gif.video, height, media?.url, gif.id])\n\n    useEffect(() => {\n        if (videoEl.current && media?.url && seek.current) {\n            videoEl.current.currentTime = seek.current\n            seek.current = 0\n        }\n    }, [media?.url, seek])\n\n    const _onError = useCallback(() => {\n        const el = videoEl.current\n        const code = el?.error?.code\n        if (code && el?.src) {\n            const message = getErrorMessage(code, el?.src)\n            console.error(message)\n            onError?.(code)\n        }\n    }, [onError])\n    const _onPlaying = useCallback(() => {\n        onStateChange?.('playing')\n        if (!hasPlayingFired.current) {\n            hasPlayingFired.current = true\n            if (gif.analytics_response_payload) {\n                pingback({ actionType: 'START', analyticsResponsePayload: gif.analytics_response_payload })\n            }\n            onFirstPlay?.(Date.now() - mountTime.current)\n        }\n    }, [onFirstPlay, onStateChange, gif])\n    const _onPaused = useCallback(() => onStateChange?.('paused'), [onStateChange])\n    const _onTimeUpdate = useCallback(() => {\n        const el = videoEl.current\n        if (el) {\n            const playhead = el.currentTime\n            quartileEvents.some((q: QuartileEvent) => {\n                if (shouldFireQuartile(q, playhead, el.duration, quartilesFired.current, loopNumber.current)) {\n                    onQuartile?.(q)\n                    return true\n                }\n                return false\n            })\n            onTimeUpdate?.(playhead || 0)\n        }\n    }, [onQuartile, onTimeUpdate])\n    const _onCanPlay = useCallback(() => onCanPlay?.(), [onCanPlay])\n    const _onWaiting = useCallback(() => {\n        const el = videoEl.current\n        // we get a waiting event after a loop, so ignore the first one while the play head is 0\n        if (el?.currentTime !== 0 && el?.networkState !== Network.IDLE) {\n            onWaiting?.(++waitingCount.current)\n        }\n    }, [onWaiting])\n    const _onEnded = useCallback(() => {\n        // helps prevent two ended events when changing media\n        if (!hasPlayingFired.current) {\n            return\n        }\n        if (loop && videoEl.current) {\n            videoEl.current.play()\n        }\n        onLoop?.(loopNumber.current)\n        loopNumber.current = loopNumber.current + 1\n        onEnded?.()\n    }, [onEnded, loop, onLoop])\n    const _onEndFullscreen = useCallback(() => onEndFullscreen?.(), [onEndFullscreen])\n    const tryAutoPlayWithSound = useCallback(\n        async (videoEl: HTMLVideoElement) => {\n            if (videoEl) {\n                const promisePlay = videoEl.play()\n                if (promisePlay !== undefined) {\n                    try {\n                        await promisePlay\n                        onMuted?.(false)\n                    } catch (error) {\n                        // Autoplay not allowed!\n                        // Mute video and try to play again\n                        videoEl.muted = true\n                        // Allow the UI to show that the video is muted\n                        onMuted?.(true)\n                        videoEl.play()\n                    }\n                }\n            }\n        },\n        [onMuted]\n    )\n\n    useEffect(() => {\n        const el = videoEl.current\n        if (el) {\n            tryAutoPlayWithSound(el)\n            setVideoEl?.(el)\n            if (!isNaN(volume)) {\n                el.volume = volume\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        const el = videoEl.current\n        if (el) {\n            el.addEventListener('play', _onPlaying)\n            el.addEventListener('pause', _onPaused)\n            el.addEventListener('error', _onError)\n            el.addEventListener('timeupdate', _onTimeUpdate)\n            el.addEventListener('canplay', _onCanPlay)\n            el.addEventListener('ended', _onEnded)\n            el.addEventListener('waiting', _onWaiting)\n            el.addEventListener('webkitendfullscreen', _onEndFullscreen) // this is needed for iOS\n        }\n        return () => {\n            if (el) {\n                el.removeEventListener('play', _onPlaying)\n                el.removeEventListener('pause', _onPaused)\n                el.removeEventListener('error', _onError)\n                el.removeEventListener('timeupdate', _onTimeUpdate)\n                el.removeEventListener('canplay', _onCanPlay)\n                el.removeEventListener('ended', _onEnded)\n                el.removeEventListener('waiting', _onWaiting)\n                el.removeEventListener('webkitendfullscreen', _onEndFullscreen)\n            }\n        }\n    }, [_onPlaying, _onPaused, _onError, _onTimeUpdate, _onCanPlay, _onEnded, _onWaiting, _onEndFullscreen])\n    const captionSrc = gif.video?.captions?.[ccLanguage]?.vtt\n    return media?.url ? (\n        <video\n            crossOrigin=\"anonymous\"\n            draggable={true}\n            className={className}\n            width={width}\n            height={height}\n            muted={muted}\n            autoPlay\n            playsInline\n            ref={videoEl}\n            src={media?.url}\n        >\n            {ccEnabled && captionSrc && (\n                <track label=\"English\" kind=\"subtitles\" srcLang={ccLanguage} src={captionSrc} default />\n            )}\n        </video>\n    ) : null\n}\n\nVideo.className = videoClassName\n\nexport default Video\n"]},"metadata":{},"sourceType":"script"}