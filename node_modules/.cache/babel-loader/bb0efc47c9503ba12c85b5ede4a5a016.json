{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAltText = exports.getGifWidth = exports.getGifHeight = exports.getBestRenditionUrl = exports.getBestRendition = exports.getBestVideo = exports.getSpecificRendition = void 0;\n\nvar bestfit_1 = __importDefault(require(\"./bestfit\"));\n\nvar collections_1 = require(\"./collections\");\n\nvar webp_check_1 = require(\"./webp-check\");\n\nvar getSpecificRendition = function (_a, renditionLabel, isStill, useVideo) {\n  var images = _a.images,\n      isSticker = _a.is_sticker;\n\n  if (isStill === void 0) {\n    isStill = false;\n  }\n\n  if (useVideo === void 0) {\n    useVideo = false;\n  }\n\n  if (!images || !renditionLabel) return '';\n  isStill = isStill && !useVideo; // @ts-ignore come back to this\n\n  var rendition = images[\"\" + renditionLabel + (isStill ? '_still' : '')];\n\n  if (rendition) {\n    if (isSticker || isStill) {\n      return rendition.url;\n    }\n\n    var webP = webp_check_1.SUPPORTS_WEBP && rendition.webp;\n    return useVideo ? rendition.mp4 : webP || rendition.url;\n  }\n\n  return '';\n};\n\nexports.getSpecificRendition = getSpecificRendition;\n\nvar getBestVideo = function (video, width, height) {\n  var assets = video === null || video === void 0 ? void 0 : video.assets;\n\n  if (assets) {\n    assets = __assign({}, assets); // @ts-ignore we don't show source according to the existing code\n\n    delete assets.source;\n    var filteredAssets = Object.values(assets).sort(function (a, b) {\n      return a.width - b.width;\n    });\n    return bestfit_1.default(filteredAssets, width, height);\n  }\n};\n\nexports.getBestVideo = getBestVideo;\n\nvar getRenditions = function (type, images, video) {\n  return type === 'video' && video && video.previews && !Object.keys(images).length ? video.previews : images;\n};\n\nvar getBestRendition = function (images, gifWidth, gifHeight, scaleUpMaxPixels) {\n  var checkRenditions = collections_1.pick(images, ['original', 'fixed_width', 'fixed_height', 'fixed_width_small', 'fixed_height_small']);\n  var testImages = Object.entries(checkRenditions).map(function (_a) {\n    var renditionName = _a[0],\n        val = _a[1];\n    return __assign({\n      renditionName: renditionName\n    }, val);\n  });\n  return bestfit_1.default(testImages, gifWidth, gifHeight, scaleUpMaxPixels);\n};\n\nexports.getBestRendition = getBestRendition;\n\nvar getBestRenditionUrl = function (_a, gifWidth, gifHeight, options) {\n  var images = _a.images,\n      video = _a.video,\n      type = _a.type;\n\n  if (options === void 0) {\n    options = {\n      isStill: false,\n      useVideo: false\n    };\n  }\n\n  if (!gifWidth || !gifHeight || !images) return '';\n  var useVideo = options.useVideo,\n      isStill = options.isStill,\n      scaleUpMaxPixels = options.scaleUpMaxPixels;\n  var renditions = getRenditions(type, images, video);\n  var renditionName = exports.getBestRendition(renditions, gifWidth, gifHeight, scaleUpMaxPixels).renditionName; // still, video, webp or gif\n\n  var key = \"\" + renditionName + (isStill && !useVideo ? '_still' : '');\n  var rendition = renditions[key];\n  var match = useVideo ? rendition.mp4 : webp_check_1.SUPPORTS_WEBP && rendition.webp ? rendition.webp : rendition.url;\n  return match || '';\n};\n\nexports.getBestRenditionUrl = getBestRenditionUrl;\n\nvar getGifHeight = function (_a, gifWidth) {\n  var images = _a.images;\n  var fixed_width = images.fixed_width;\n\n  if (fixed_width) {\n    var width = fixed_width.width,\n        height = fixed_width.height;\n    var aspectRatio = width / height;\n    return Math.round(gifWidth / aspectRatio);\n  }\n\n  return 0;\n};\n\nexports.getGifHeight = getGifHeight;\n\nvar getGifWidth = function (_a, gifHeight) {\n  var images = _a.images;\n  var fixed_width = images.fixed_width;\n\n  if (fixed_width) {\n    var width = fixed_width.width,\n        height = fixed_width.height;\n    var aspectRatio = width / height;\n    return Math.round(gifHeight * aspectRatio);\n  }\n\n  return 0;\n};\n\nexports.getGifWidth = getGifWidth;\n/**\n * GIF Text - Alt Text: Generates alt text for\n * GIF images based on username and tags.\n * @prop  {Gif}\n * @return {String} GIF alt text.\n */\n\nvar getAltText = function (_a) {\n  var user = _a.user,\n      _b = _a.tags,\n      tags = _b === void 0 ? [] : _b,\n      _c = _a.is_sticker,\n      is_sticker = _c === void 0 ? false : _c,\n      _d = _a.title,\n      title = _d === void 0 ? '' : _d;\n\n  if (title) {\n    return title;\n  }\n\n  var username = user && user.username || '';\n  var filteredTags = collections_1.take(collections_1.without(tags, ['transparent']), username ? 4 : 5);\n  return \"\" + (username ? username + \" \" : \"\") + filteredTags.join(' ') + \" \" + (is_sticker ? 'Sticker' : 'GIF');\n};\n\nexports.getAltText = getAltText;","map":{"version":3,"mappings":"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","names":["getSpecificRendition","_a","renditionLabel","isStill","useVideo","images","isSticker","rendition","url","webP","webp_check_1","webp","mp4","exports","getBestVideo","video","width","height","assets","source","filteredAssets","Object","values","sort","a","b","bestfit_1","getRenditions","type","previews","keys","length","getBestRendition","gifWidth","gifHeight","scaleUpMaxPixels","checkRenditions","collections_1","testImages","entries","map","renditionName","val","getBestRenditionUrl","options","renditions","key","match","getGifHeight","fixed_width","aspectRatio","Math","round","getGifWidth","getAltText","user","_b","tags","_c","is_sticker","_d","title","username","filteredTags","join"],"sources":["/home/simo/programming/web/projects/search-gifs/node_modules/@giphy/js-util/src/gif-utils.ts"],"sourcesContent":["import { IGif, IImage, IImages, ImageAllTypes, IRendition } from '@giphy/js-types'\nimport IVideo from '@giphy/js-types/dist/video'\nimport bestfit from './bestfit'\nimport { pick, take, without } from './collections'\nimport { SUPPORTS_WEBP } from './webp-check'\n\nexport const getSpecificRendition = (\n    { images, is_sticker: isSticker }: IGif,\n    renditionLabel: string,\n    isStill = false,\n    useVideo = false\n) => {\n    if (!images || !renditionLabel) return ''\n    isStill = isStill && !useVideo\n    // @ts-ignore come back to this\n    const rendition = images[`${renditionLabel}${isStill ? '_still' : ''}`] as ImageAllTypes\n\n    if (rendition) {\n        if (isSticker || isStill) {\n            return rendition.url\n        }\n        const webP = SUPPORTS_WEBP && rendition.webp\n        return useVideo ? rendition.mp4 : webP || rendition.url\n    }\n\n    return ''\n}\n\ninterface IRenditionWithName extends IRendition {\n    renditionName: keyof IImages\n}\n\nexport const getBestVideo = (video: IGif['video'], width: number, height: number) => {\n    let assets = video?.assets\n    if (assets) {\n        assets = { ...assets }\n        // @ts-ignore we don't show source according to the existing code\n        delete assets.source\n        const filteredAssets = Object.values(assets).sort((a: IRendition, b: IRendition) => a.width - b.width)\n        return bestfit(filteredAssets, width, height) as IImage\n    }\n}\n\nconst getRenditions = (type: IGif['type'], images: IImages, video?: IVideo) =>\n    type === 'video' && video && video.previews && !Object.keys(images).length ? video.previews : images\n\nexport const getBestRendition = (\n    images: IImages,\n    gifWidth: number,\n    gifHeight: number,\n    scaleUpMaxPixels?: number\n): IRenditionWithName => {\n    const checkRenditions = pick(images, [\n        'original',\n        'fixed_width',\n        'fixed_height',\n        'fixed_width_small',\n        'fixed_height_small',\n    ])\n    const testImages = Object.entries(checkRenditions).map(([renditionName, val]) => ({\n        renditionName,\n        ...val,\n    })) as IRenditionWithName[]\n    return bestfit(testImages, gifWidth, gifHeight, scaleUpMaxPixels) as IRenditionWithName\n}\n\ntype Options = {\n    isStill?: boolean\n    useVideo?: boolean\n    scaleUpMaxPixels?: number\n}\nexport const getBestRenditionUrl = (\n    { images, video, type }: IGif,\n    gifWidth: number,\n    gifHeight: number,\n    options: Options = { isStill: false, useVideo: false }\n): keyof IImages | '' => {\n    if (!gifWidth || !gifHeight || !images) return ''\n    const { useVideo, isStill, scaleUpMaxPixels } = options\n    const renditions = getRenditions(type, images, video)\n    const { renditionName } = getBestRendition(renditions, gifWidth, gifHeight, scaleUpMaxPixels)\n\n    // still, video, webp or gif\n    const key = `${renditionName}${isStill && !useVideo ? '_still' : ''}` as keyof IImages\n    const rendition = renditions[key] as ImageAllTypes\n\n    const match = useVideo ? rendition.mp4 : SUPPORTS_WEBP && rendition.webp ? rendition.webp : rendition.url\n    return (match || '') as keyof IImages\n}\n\nexport const getGifHeight = ({ images }: IGif, gifWidth: number) => {\n    const { fixed_width } = images\n    if (fixed_width) {\n        const { width, height } = fixed_width\n        const aspectRatio = width / height\n        return Math.round(gifWidth / aspectRatio)\n    }\n    return 0\n}\n\nexport const getGifWidth = ({ images }: IGif, gifHeight: number) => {\n    const { fixed_width } = images\n    if (fixed_width) {\n        const { width, height } = fixed_width\n        const aspectRatio = width / height\n        return Math.round(gifHeight * aspectRatio)\n    }\n    return 0\n}\n\n/**\n * GIF Text - Alt Text: Generates alt text for\n * GIF images based on username and tags.\n * @prop  {Gif}\n * @return {String} GIF alt text.\n */\nexport const getAltText = ({ user, tags = [], is_sticker = false, title = '' }: IGif): string => {\n    if (title) {\n        return title\n    }\n    const username = (user && user.username) || ''\n    const filteredTags = take(without(tags, ['transparent']), username ? 4 : 5)\n    return `${username ? `${username} ` : ``}${filteredTags.join(' ')} ${is_sticker ? 'Sticker' : 'GIF'}`\n}\n"]},"metadata":{},"sourceType":"script"}